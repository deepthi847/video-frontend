{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Documents\\\\Downloads\\\\insta-reels-master\\\\insta-reels-master\\\\App\\\\Context\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport { DEFAULT_THEME, Theme } from \"../Theme\";\nimport { height } from \"../Utils/Constant\";\nimport { setItemInStorage, getItemFromStorage } from \"../Utils/Storage\";\nvar APP_THEME = 'appTheme';\nexport var AppContext = createContext({\n  appTheme: DEFAULT_THEME,\n  initializeAppTheme: function initializeAppTheme() {},\n  setAppTheme: function setAppTheme() {}\n});\nexport var AppContextProvider = function AppContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(DEFAULT_THEME),\n      _useState2 = _slicedToArray(_useState, 2),\n      appTheme = _useState2[0],\n      setAppTheme = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isInit = _useState4[0],\n      setIsInit = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isMute = _useState6[0],\n      setIsMute = _useState6[1];\n\n  var _useState7 = useState(height),\n      _useState8 = _slicedToArray(_useState7, 2),\n      displayHeight = _useState8[0],\n      setDisplayHeight = _useState8[1];\n\n  useEffect(function () {\n    setInitialLoad();\n  });\n\n  var setInitialLoad = function setInitialLoad() {\n    return _regeneratorRuntime.async(function setInitialLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isInit) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(initializeAppTheme());\n\n          case 3:\n            setIsInit(false);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setTheme = function setTheme(theme) {\n    setAppTheme(theme);\n    setItemInStorage(APP_THEME, theme);\n  };\n\n  var initializeAppTheme = function initializeAppTheme(themeType) {\n    var currentTheme, colorScheme;\n    return _regeneratorRuntime.async(function initializeAppTheme$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getItemFromStorage(APP_THEME));\n\n          case 2:\n            currentTheme = _context2.sent;\n\n            if (!currentTheme && !themeType) {\n              colorScheme = Appearance.getColorScheme();\n              setAppTheme(colorScheme && colorScheme || DEFAULT_THEME);\n            } else {\n              if (themeType) {\n                setAppTheme(themeType);\n                setItemInStorage(APP_THEME, themeType);\n              } else {\n                setAppTheme(currentTheme);\n              }\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSetIsMute = function onSetIsMute() {\n    setIsMute(!isMute);\n  };\n\n  return React.createElement(AppContext.Provider, {\n    value: {\n      isMute: isMute,\n      setIsMute: onSetIsMute,\n      displayHeight: displayHeight,\n      setDisplayHeight: setDisplayHeight,\n      appTheme: Theme[appTheme],\n      setAppTheme: setTheme,\n      initializeAppTheme: initializeAppTheme\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","DEFAULT_THEME","Theme","height","setItemInStorage","getItemFromStorage","APP_THEME","AppContext","appTheme","initializeAppTheme","setAppTheme","AppContextProvider","children","isInit","setIsInit","isMute","setIsMute","displayHeight","setDisplayHeight","setInitialLoad","setTheme","theme","themeType","currentTheme","colorScheme","Appearance","getColorScheme","onSetIsMute"],"sources":["E:/Documents/Downloads/insta-reels-master/insta-reels-master/App/Context/index.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport {Appearance} from 'react-native';\nimport {DEFAULT_THEME, Theme} from '../Theme';\nimport {height} from '../Utils/Constant';\nimport {setItemInStorage, getItemFromStorage} from '../Utils/Storage';\n\nconst APP_THEME = 'appTheme';\n\n// App Conext for App Theme, display height and Video Volume\nexport const AppContext = createContext({\n  appTheme: DEFAULT_THEME,\n  initializeAppTheme: () => {},\n  setAppTheme: () => {},\n});\n\nexport const AppContextProvider = ({children}) => {\n  const [appTheme, setAppTheme] = useState(DEFAULT_THEME);\n  const [isInit, setIsInit] = useState(true);\n  const [isMute, setIsMute] = useState(true);\n  const [displayHeight, setDisplayHeight] = useState(height);\n\n  useEffect(() => {\n    setInitialLoad();\n  });\n\n  const setInitialLoad = async () => {\n    if (isInit) {\n      await initializeAppTheme();\n      setIsInit(false);\n    }\n  };\n\n  const setTheme = theme => {\n    setAppTheme(theme);\n    setItemInStorage(APP_THEME, theme);\n  };\n\n  const initializeAppTheme = async themeType => {\n    const currentTheme = await getItemFromStorage(APP_THEME);\n    if (!currentTheme && !themeType) {\n      const colorScheme = Appearance.getColorScheme();\n      setAppTheme((colorScheme && colorScheme) || DEFAULT_THEME);\n    } else {\n      if (themeType) {\n        setAppTheme(themeType);\n        setItemInStorage(APP_THEME, themeType);\n      } else {\n        setAppTheme(currentTheme);\n      }\n    }\n  };\n\n  const onSetIsMute = () => {\n    setIsMute(!isMute);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        isMute,\n        setIsMute: onSetIsMute,\n        displayHeight,\n        setDisplayHeight,\n        appTheme: Theme[appTheme],\n        setAppTheme: setTheme,\n        initializeAppTheme,\n      }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;;AAEA,SAAQC,aAAR,EAAuBC,KAAvB;AACA,SAAQC,MAAR;AACA,SAAQC,gBAAR,EAA0BC,kBAA1B;AAEA,IAAMC,SAAS,GAAG,UAAlB;AAGA,OAAO,IAAMC,UAAU,GAAGT,aAAa,CAAC;EACtCU,QAAQ,EAAEP,aAD4B;EAEtCQ,kBAAkB,EAAE,8BAAM,CAAE,CAFU;EAGtCC,WAAW,EAAE,uBAAM,CAAE;AAHiB,CAAD,CAAhC;AAMP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAgB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EAChD,gBAAgCZ,QAAQ,CAACC,aAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBE,WAAjB;;EACA,iBAA4BV,QAAQ,CAAC,IAAD,CAApC;EAAA;EAAA,IAAOa,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAA4Bd,QAAQ,CAAC,IAAD,CAApC;EAAA;EAAA,IAAOe,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAA0ChB,QAAQ,CAACG,MAAD,CAAlD;EAAA;EAAA,IAAOc,aAAP;EAAA,IAAsBC,gBAAtB;;EAEAnB,SAAS,CAAC,YAAM;IACdoB,cAAc;EACf,CAFQ,CAAT;;EAIA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;IAAA;MAAA;QAAA;UAAA;YAAA,KACjBN,MADiB;cAAA;cAAA;YAAA;;YAAA;YAAA,iCAEbJ,kBAAkB,EAFL;;UAAA;YAGnBK,SAAS,CAAC,KAAD,CAAT;;UAHmB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAvB;;EAOA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;IACxBX,WAAW,CAACW,KAAD,CAAX;IACAjB,gBAAgB,CAACE,SAAD,EAAYe,KAAZ,CAAhB;EACD,CAHD;;EAKA,IAAMZ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAMa,SAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACEjB,kBAAkB,CAACC,SAAD,CADpB;;UAAA;YACnBiB,YADmB;;YAEzB,IAAI,CAACA,YAAD,IAAiB,CAACD,SAAtB,EAAiC;cACzBE,WADyB,GACXC,UAAU,CAACC,cAAX,EADW;cAE/BhB,WAAW,CAAEc,WAAW,IAAIA,WAAhB,IAAgCvB,aAAjC,CAAX;YACD,CAHD,MAGO;cACL,IAAIqB,SAAJ,EAAe;gBACbZ,WAAW,CAACY,SAAD,CAAX;gBACAlB,gBAAgB,CAACE,SAAD,EAAYgB,SAAZ,CAAhB;cACD,CAHD,MAGO;gBACLZ,WAAW,CAACa,YAAD,CAAX;cACD;YACF;;UAZwB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA3B;;EAeA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBX,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;;EAIA,OACE,oBAAC,UAAD,CAAY,QAAZ;IACE,KAAK,EAAE;MACLA,MAAM,EAANA,MADK;MAELC,SAAS,EAAEW,WAFN;MAGLV,aAAa,EAAbA,aAHK;MAILC,gBAAgB,EAAhBA,gBAJK;MAKLV,QAAQ,EAAEN,KAAK,CAACM,QAAD,CALV;MAMLE,WAAW,EAAEU,QANR;MAOLX,kBAAkB,EAAlBA;IAPK,CADT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAUGG,QAVH,CADF;AAcD,CAvDM"},"metadata":{},"sourceType":"module"}